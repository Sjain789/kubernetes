The Nautilus development team had a discussion with DevOps team and they want to deploy a Jekyll app on Kubernetes cluster. 
They have already shared details with DevOps team, please find below more details:
1.	Create a namespace jekyll-namespace-nautilus for jekyll.
2.	PersistentVolume is already created on jump_host.
3.	Create a PersistentVolumeClaim which should be named as jekyll-site-nautilus under the same namespace. accessModes should be ReadWriteMany, request 1Gi storage.

4.	Create a pod named jekyll-pod-nautilus for jekyll. 
Init container should be named as jekyll-init-nautilus, image should be kodekloud/jekyll, use command as [ "jekyll", "new", "/site" ]. 
Its image pull policy should be IfNotPresent, volumeMount name should be site and its mountPath should be /site. 
The main container should be named as jekyll-container-nautilus, its image should be kodekloud/jekyll-serve, volumeMount name should be site and its mountPath should be /site. 
Volume name should be site and persistent volume claim's claim name should be jekyll-site-nautilus

5.	Create a service for jekyll which should be named as jekyll-container-nautilus under the same namespace. 
Port should be 8080, protocol should be TCP, its targetPort should be 4000 and nodePort should be 31181. 
Its type should be NodePort and loadbalancer status should be {}.
You can use any labels as per your choice.
Note: The kubectl on jump_host has been configured to work with the kubernetes cluster.


---
apiVersion: v1
kind: Namespace
metadata:
  name: jekyll-namespace-nautilus

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jekyll-site-nautilus
  namespace: jekyll-namespace-nautilus
  labels:
    app: jekyll
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: jekyll-pod-nautilus
  namespace: jekyll-namespace-nautilus
  labels:
    app: jekyll
spec:
  containers:
  - name: jekyll-container-nautilus
    image: kodekloud/jekyll-serve
    volumeMounts:
    - mountPath: /site
      name: site
  initContainers:
  - name: jekyll-init-nautilus
    image: kodekloud/jekyll
    imagePullPolicy: IfNotPresent
    command: ["jekyll", "new", "/site"]
    volumeMounts:
    - mountPath: /site
      name: site
  volumes:
    - name: site
      persistentVolumeClaim:
        claimName: jekyll-site-nautilus

---
apiVersion: v1
kind: Service
metadata:
    name: jekyll-container-nautilus
    namespace: jekyll-namespace-nautilus
    labels:
      app: jekyll
spec:
    ports:
      - port: 8080
        targetPort: 4000
        nodePort: 31181
        protocol: TCP
    type: NodePort
    selector:
        app: jekyll
status:
  loadBalancer:
    {}
