A new java based application is ready to be deployed on a Kubernetes cluster. 
Development team had some meeting with DevOps team share requirements and application scope. 
Team is ready to setup an application stack for same under their existing cluster. 
Below you can find the details for the same:
1.	Create a namespace named tomcat-namespace-devops.
2.	Create a deployment for tomcat app which should be named as tomcat-deployment-devops under the same namespace you created. 
Replicas count should be 1, the container should be named as tomcat-container-devops, its image should be gcr.io/kodekloud/centos-ssh-enabled:tomcat and its container port should be 8080.
3.	Create a service for tomcat app which should be named as tomcat-service-devops under the same namespace you created. 
Service type should be NodePort. port's protocol should be TCP, port should be 80, targetPort should be 8080 and nodePort should be 32227.
Before clicking on Finish button please make sure application is up and running.
You can use any labels as per your choice.


---
apiVersion: v1
kind: Namespace
metadata:
  name: tomcat-namespace-devops

---
apiVersion: v1
kind: Service
metadata:
    name: tomcat-service-devops
    namespace: tomcat-namespace-devops
    labels:
        app: tomcat
spec:
    ports:
        - port: 80
          targetPort: 8080
          nodePort: 32227
          protocol: TCP
    type: NodePort
    selector:
        app: tomcat
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: tomcat-deployment-devops
    namespace: tomcat-namespace-devops
    labels:
        app: tomcat
spec:
    replicas: 1
    selector:
        matchLabels:
            app: tomcat
    template:
        metadata:
            labels:
                app: tomcat
        spec:
            containers:
            - name: tomcat-container-devops
              image: gcr.io/kodekloud/centos-ssh-enabled:tomcat
              ports:
              - containerPort: 8080
