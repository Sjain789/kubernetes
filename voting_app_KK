---
apiVersion: v1
kind: Namespace
metadata:
  name: vote

---
apiVersion: v1
kind: Service
metadata:
    name: vote-service 
    namespace: vote
    labels:
        app: voting-app
spec:
    ports:
        - port: 5000
          targetPort: 80
          nodePort: 31000
    type: NodePort
    selector:
        app: voting-app
        
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: vote-deployment
    namespace: vote
    labels:
        app: voting-app
spec:
    replicas: 1
    selector:    
        matchLabels:
            app: voting-app
    template:
        metadata:
            labels:
                app: voting-app
        spec:
            containers:
            - name: vote
              image: kodekloud/examplevotingapp_vote:before
              ports:
              - containerPort: 80


---
apiVersion: v1
kind: Service
metadata:
    name: redis 
    namespace: vote
    labels:
        name: redis-deploy
spec:
    ports:
        - port: 6379
          targetPort: 6379
    type: ClusterIP
    selector:
        name: redis-deploy

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: redis-deployment
    namespace: vote
    labels:
        name: redis-deploy
spec:
    replicas: 1
    selector:    
        matchLabels:
            name: redis-deploy
    template:
        metadata:
            labels:
                name: redis-deploy
        spec:
            containers:
            - name: redis
              image: redis:alpine 
              ports:
                - containerPort: 6379
              volumeMounts:
              - mountPath: /data
                name: redis-data
            volumes:
            - name: redis-data
              emptyDir: {}

              ---
apiVersion: apps/v1
kind: Deployment
metadata:
name: worker
namespace: vote
labels:
    name: worker
    app: voting-app
spec:
replicas: 1
selector:
    matchLabels:
        name: worker
        app: voting-app
template:
    metadata:
        labels:
            name: worker
            app: voting-app
    spec:
        containers:
        - name: worker
            image: kodekloud/examplevotingapp_worker

---
apiVersion: v1
kind: Service
metadata:
    name: db
    namespace: vote
    labels:
        service: postgres
spec:
    ports:
        - port: 5432
          targetPort: 5432
    type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: db-deployment
    namespace: vote
spec:
    replicas: 1
    selector:
        matchLabels:
            service: postgres
    template:
        metadata:
            labels:
                service: postgres
        spec:
            containers:
            - name: postgres
              image: postgres:9.4
              ports:
              - containerPort: 5432
              env:
              - name: POSTGRES_USER
                value: postgres
              - name: POSTGRES_PASSWORD
                value: postgres
              - name: POSTGRES_HOST_AUTH_METHOD
                value: trust
              volumeMounts:
              - mountPath: /var/lib/postgresql/data
                name: db-data
            volumes:
            - name: db-data
                emptyDir: {}


---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: result-deployment 
    namespace: vote
    labels:
        app: result
spec:
    replicas: 1
    selector:    
        matchLabels:
            app: result
    template:
        metadata:
            labels:
                app: result
        spec:
            containers:
            - name: result
              image: kodekloud/examplevotingapp_result:before
              ports:
                - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
    name: result-service
    namespace: vote
    labels:
        app: result
spec:
    ports:
        - port: 5001
          targetPort: 80
          nodePort: 31001
    type: NodePort
